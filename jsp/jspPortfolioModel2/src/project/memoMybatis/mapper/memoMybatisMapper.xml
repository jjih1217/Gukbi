<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "memoMybatis">

<sql id="search">
	<choose>
		<when test="dto.searchGubun == 'writer_content' ">
			and (writer like '%' || #{dto.searchData} || '%' or content like '%' || #{dto.searchData} || '%')
		</when>
		<when test="dto.searchGubun != null and dto.searchGubun != '' and dto.searchData != null and dto.searchData != ''">
			and (${dto.searchGubun} like '%' || #{dto.searchData} || '%')
		</when>
		<otherwise>
		</otherwise>
	</choose>
</sql>

<sql id="prenext">
	LAG(no) OVER (order by no desc) preNo, LAG(writer) OVER (order by no desc) preName, 
	LEAD(no) OVER (order by no desc) nxtNo, LEAD(writer) OVER (order by no desc) nxtName 
</sql>

<select id="getTotalRecord" resultType="int">
	select count(*) from ${tableName01} where 1 = 1
	<include refid="search"></include>
</select>

<select id="getSelectAll" resultType="project.memoMybatis.model.dto.MemoMybatisDTO"> <!-- 각각의 값 -->
	<!-- 
		sql += "select * from (select A.*, RowNum rnum from ( ";
		sql += basicSql;
		sql += " ) A ) where rnum >=? and rnum <= ? "; 
	-->
	select * from (select A.*, Rownum rnum from (
		select * from ${tableName01} where 1 = 1
		<include refid="search"></include>
<![CDATA[
		order by no desc
		
	) A) where rnum >= #{dto.startRecord} and rnum <= #{dto.lastRecord}
]]>
</select>

<select id="getSelectOne" resultType="project.memoMybatis.model.dto.MemoMybatisDTO">
	select * from (
		select m.*,  
		<!-- <include refid="prenext"></include> -->
			LAG(no) OVER (order by no desc) preNo, 
			LAG(writer) OVER (order by no desc) preName, 
			LEAD(no) OVER (order by no desc) nxtNo, 
			LEAD(writer) OVER (order by no desc) nxtName 
			
		from memo m where 1 = 1
		
		<include refid="search"></include>
<![CDATA[
		order by no desc 
		
	) where no = #{dto.no}
]]>
</select>

<insert id="setInsert">
	insert into ${tableName01} (no, writer, content, regiDate) values 
	(seq_memo.nextval, #{dto.writer}, #{dto.content}, sysdate)
</insert>

<update id="setUpdate">
	update ${tableName01} set writer = #{dto.writer}, content = #{dto.content} where no = #{dto.no}
</update>

<delete id="setDelete">
	delete from ${tableName01} where no = #{dto.no}
</delete>

</mapper>

<!-- 
#{writer} = 'writer' 
${writer} = writer
 -->